http://stilbuero.de/jquery/delegate/?text=qwewqe
javasscript mvc delegate



http://blogs.claritycon.com/blogs/sean_devlin/archive/2009/06/23/a-lightweight-event-framework-in-javascript.aspx

http://www.sitepoint.com/blogs/2008/07/23/javascript-event-delegation-is-easier-than-you-think/

http://www.openajax.org/member/wiki/OpenAjax_Hub_1.0_Specification_PublishSubscribe

http://www.andreacfm.com/os/ops/
http://code.google.com/p/opsjs/source/browse/trunk/ops.js

http://sustainablecode.blogspot.com/2008/05/lightweight-javascript-events.html

state machines
-----------------
http://doc.appcelerator.org/expressions:statemachine


Inversion of Control
-----------------
http://www.c-sharpcorner.com/UploadFile/questpond/DIDI11032008082731AM/DIDI.aspx

misc
-----------------
http://github.com/denis/jquery-plugins/blob/master/ajaxable/jquery.ajaxable.js
http://peter.michaux.ca/articles/transitioning-from-java-classes-to-javascript-prototypes

command pattern
-----------------
http://peter.michaux.ca/articles/the-command-pattern-in-javascript-encapsulating-function-property-calls

singleton
-----------------
http://blog.anselmbradford.com/2009/04/21/object-oriented-javascript-tip-the-quintessential-singleton/
http://www.javascriptkata.com/2007/04/04/how-to-make-a-singleton/

http://www.codingwithoutcomments.com/2008/10/08/singleton-i-love-you-but-youre-bringing-me-down/

plugins
-----------------
http://plugins.jquery.com/project/bindo
http://code.google.com/p/ajaxsoft/wiki/actionController
http://blog.threedubmedia.com/2008/10/jquerydelegate.html
http://plugins.jquery.com/project/jQuerySubscribe
http://claypooljs.com/
http://plugins.jquery.com/project/livequery


Class
srender(name, template, data)

PATH_REPLACER
PATH_NAME_MATCHER

Samantha.VERSION

Samantha.Object 
-----------------------
  + init(set)
  + clone(obj)
  + toHash()
  + toHTML()
  + uuid()
  + each()
  + log()

Samantha.Application
-----------------------
  ROUTE_VERBS
  APP_EVENTS
  _last_route
  _running
  data_store_name
  element_selector
  debug
  silence_404
  run_interval_every

  + init(app)
  + toString()
  + $element()
  + route(verb, path, callback)
  + eventNamespace()
  + bind(name, data, callback)
  + trigger(name, data, context)
  + before(callback)
  + after(callback)
  + isRunning()
  + helpers(extensions)
  + run(start_url)
  + unload()
  + addLogger(logger)
  + lookupRoute(verb, path)
  + runRoute(verb, path, params)
  + getLocation()
  + setLocation(new_location)
  + swap(content)
  + notFound(verb, path)
  + _defineRouteShortcut(verb)
  + _checkLocation()
  + _checkFormSubmission(form)
  + _listen(name, callback)
  + _unlisten(name, callback)
  
  app
  routes
  listeners
  befores
  namespace
  context_prototype
  
Samantha.EventContext
-----------------------
  + init(app, verb, path, params)
  + $element()
  + template(template, data, name)
  + partial(path, data, callback)
  + redirect(to)
  + trigger(name, data)
  + eventNamespace()
  + notFound()


Router
  listens for samantha.events 
  lets apps register/unregister events to listen for
  

app
  each app can be defined sammy style
  
routes = {}
routes.get = []

  param_names = []
  path = /#\/test$/
  verb = "get"
  callback = function()

  var app = new Sammy.Application(function() {
    with(this) {
    
      click('#/click_1', function() { with(this) {
        // do this
      }});
    
      submit('#/submit_1', function() { with(this) {
        // do this
      }});
      
      get('#/', function() { with(this) {
        $('#main').text('');
      }});
    
      get('#/test', function() { with(this) {
        $('#main').text('Hello World');
      }});
      
    }
  });

  
  
  
// http://james.padolsey.com/javascript/regex-selector-for-jquery/
jQuery.expr[':'].regex = function(elem, index, match) {
  var matchParams = match[3].split(','),
      validLabels = /^(data|css):/,
      attr = {
        method: matchParams[0].match(validLabels) ? matchParams[0].split(':')[0] : 'attr',
        property: matchParams.shift().replace(validLabels,'')
      },
  regexFlags = 'ig',
  regex = new RegExp(matchParams.join('').replace(/^\s+|\s+$/g,''), regexFlags);
  console.log(matchParams);
  return regex.test(jQuery(elem)[attr.method](attr.property));
};  





    // $target.is('[type=submit], [type=image]')

    // if ($(target).is("input[type='submit']")) {
    //   console.log('object');
    //   return false;
    // };


    // _checkFormSubmission: function(form) {
    //   var $form, path, verb, params, returned;
    //   this.trigger('check-form-submission', {form: form});
    //   $form = $(form);
    //   path  = $form.attr('action');
    //   verb  = $form.attr('method').toString().toLowerCase();
    //   params = {};
    //   $form.find(':input[type!=submit]').each(function() {
    //     params[$(this).attr('name')] = $(this).val();
    //   });
    //   try { // catch 404s
    //     returned = this.runRoute(verb, path, params);
    //     this.last_location = path;
    //   } catch(e) {
    //     if (e.toString().match(/^404/) && this.silence_404) {
    //       return true;
    //     } else {
    //       throw(e);
    //     }
    //   }
    //   return (typeof returned == 'undefined') ? false : returned;
    // },


    // if (targetNodeName=='A') {
    //   // result.target = $(target);
    //   console.log('click:a');
    //   return false;
    // };
    // 
    // if ((targetNodeName=='INPUT' || targetNodeName=='BUTTON') && (targetType=='submit')) {
    //   // result.target = $(target).closest('form');
    //   console.log('click:submit');          
    //   return false;
    // };

